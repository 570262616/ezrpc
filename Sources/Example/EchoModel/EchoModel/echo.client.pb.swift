//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: EchoModel/echo.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import GRPC
import NIO
import NIOHTTP1
import SwiftProtobuf


/// Usage: instantiate CustomerMessageService, then call methods of this protocol to make API calls.
public protocol UsermsgcenterCustomerMessageClientProtocol {
  func UserDeleteMessages(_ request: UsermsgcenterUserDeleteMessagesRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserDeleteMessagesRequest, UsermsgcenterUserDeleteMessagesResponse>
  func UserGetMessages(_ request: UsermsgcenterUserGetMessagesRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserGetMessagesRequest, UsermsgcenterUserGetMessagesResponse>
  func UserGetUnreadMessageCount(_ request: UsermsgcenterUserGetUnreadMessageCountRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserGetUnreadMessageCountRequest, UsermsgcenterUserGetUnreadMessageCountResponse>
  func UserSetAllMessagesRead(_ request: UsermsgcenterUserSetAllMessagesReadRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserSetAllMessagesReadRequest, UsermsgcenterUserSetAllMessagesReadResponse>
  func UserSetMessageRead(_ request: UsermsgcenterUserSetMessageReadRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserSetMessageReadRequest, UsermsgcenterUserSetMessageReadResponse>
  func UserSetMessagesRead(_ request: UsermsgcenterUserSetMessagesReadRequest, callOptions: CallOptions?) -> UnaryCall<UsermsgcenterUserSetMessagesReadRequest, UsermsgcenterUserSetMessagesReadResponse>
}

public final class CustomerMessageService: GRPCClient, UsermsgcenterCustomerMessageClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the usermsgcenter.CustomerMessage service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }

  /// Unary call to UserDeleteMessages
  ///
  /// - Parameters:
  ///   - request: Request to send to UserDeleteMessages.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserDeleteMessages(_ request: UsermsgcenterUserDeleteMessagesRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserDeleteMessagesRequest, UsermsgcenterUserDeleteMessagesResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserDeleteMessages",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to UserGetMessages
  ///
  /// - Parameters:
  ///   - request: Request to send to UserGetMessages.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserGetMessages(_ request: UsermsgcenterUserGetMessagesRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserGetMessagesRequest, UsermsgcenterUserGetMessagesResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserGetMessages",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to UserGetUnreadMessageCount
  ///
  /// - Parameters:
  ///   - request: Request to send to UserGetUnreadMessageCount.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserGetUnreadMessageCount(_ request: UsermsgcenterUserGetUnreadMessageCountRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserGetUnreadMessageCountRequest, UsermsgcenterUserGetUnreadMessageCountResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserGetUnreadMessageCount",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to UserSetAllMessagesRead
  ///
  /// - Parameters:
  ///   - request: Request to send to UserSetAllMessagesRead.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserSetAllMessagesRead(_ request: UsermsgcenterUserSetAllMessagesReadRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserSetAllMessagesReadRequest, UsermsgcenterUserSetAllMessagesReadResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserSetAllMessagesRead",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to UserSetMessageRead
  ///
  /// - Parameters:
  ///   - request: Request to send to UserSetMessageRead.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserSetMessageRead(_ request: UsermsgcenterUserSetMessageReadRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserSetMessageReadRequest, UsermsgcenterUserSetMessageReadResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserSetMessageRead",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to UserSetMessagesRead
  ///
  /// - Parameters:
  ///   - request: Request to send to UserSetMessagesRead.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func UserSetMessagesRead(_ request: UsermsgcenterUserSetMessagesReadRequest, callOptions: CallOptions? = nil) -> UnaryCall<UsermsgcenterUserSetMessagesReadRequest, UsermsgcenterUserSetMessagesReadResponse> {
    return self.makeUnaryCall(path: "/usermsgcenter.CustomerMessage/UserSetMessagesRead",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

}


// Provides conformance to `GRPCPayload` for request and response messages
extension UsermsgcenterUserDeleteMessagesRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserDeleteMessagesResponse: GRPCProtobufPayload {}
extension UsermsgcenterUserGetMessagesRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserGetMessagesResponse: GRPCProtobufPayload {}
extension UsermsgcenterUserGetUnreadMessageCountRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserGetUnreadMessageCountResponse: GRPCProtobufPayload {}
extension UsermsgcenterUserSetAllMessagesReadRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserSetAllMessagesReadResponse: GRPCProtobufPayload {}
extension UsermsgcenterUserSetMessageReadRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserSetMessageReadResponse: GRPCProtobufPayload {}
extension UsermsgcenterUserSetMessagesReadRequest: GRPCProtobufPayload {}
extension UsermsgcenterUserSetMessagesReadResponse: GRPCProtobufPayload {}

